basePath: /
definitions:
  entities.BookRequest:
    properties:
      author:
        type: string
      copies:
        minimum: 0
        type: integer
      description:
        type: string
      isbn:
        type: string
      publish_date:
        type: string
      publisher:
        type: string
      title:
        type: string
    required:
    - author
    - copies
    - isbn
    - publish_date
    - publisher
    - title
    type: object
  entities.BookResponse:
    properties:
      author:
        type: string
      copies:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      isbn:
        type: string
      publish_date:
        type: string
      publisher:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is a library management system server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Library System API
  version: "1.0"
paths:
  /api/books:
    get:
      consumes:
      - application/json
      description: Get a list of all books in the library
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.BookResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the library
      parameters:
      - description: Book information
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entities.BookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.BookResponse'
        "400":
          description: Invalid request body or validation error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /api/books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by its ID
      parameters:
      - description: Book ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid book ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Book not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get a book by its UUID
      parameters:
      - description: Book ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.BookResponse'
        "400":
          description: Invalid book ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Book not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update an existing book by its ID
      parameters:
      - description: Book ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Updated book information
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entities.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.BookResponse'
        "400":
          description: Invalid book ID or request body
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Book not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a book
      tags:
      - books
schemes:
- http
swagger: "2.0"
